{"version":3,"sources":["store/getDataSlice.js","store/devicesSlice.js","store/index.js","components/Styled/GlobalStyle.js","components/Styled/Preloader.js","components/Icons/IconStyle.js","components/Icons/Icons.js","components/DeviceSelection/DeviceSelector.js","components/DeviceSelection/DeviceSelection.js","components/DeviceSelection/index.js","hooks/useVisitTime.js","helpers/calcGreaterRoundNum.js","helpers/formatScaleNum.js","hooks/useTimeScale.js","context/DiagramContext.js","helpers/createWeekDayTimeObj.js","helpers/calcVisitTime.js","components/TimeScale/ScaleItem.js","components/TimeScale/TimeScale.js","components/TimeScale/index.js","components/DayDiagram/Item.js","components/DayDiagram/DayDiagram.js","components/DayDiagram/index.js","components/Diagram/DayColumns.js","components/Diagram/WeekDays.js","components/GridBack/Repeat.js","components/GridBack/GridBack.js","components/GridBack/index.js","components/Diagram/Diagram.js","components/Diagram/index.js","components/DiagramField/Footer.js","components/DiagramField/DiagramField.js","components/DiagramField/index.js","components/Styled/ErrorLoad.js","App.js","index.js"],"names":["getData","createAsyncThunk","dbUrl","a","rejectWithValue","fetch","response","ok","Error","json","result","message","getDataSlice","createSlice","name","initialState","data","status","error","reducers","extraReducers","pending","state","fulfilled","action","payload","rejected","selectError","selectStatus","initDevicesCheck","env","devicesAdapter","createEntityAdapter","selectId","device","n","selectedDevices","devicesSlice","getInitialState","toggleSelectedDevice","id","o","setAll","forEach","item","selection","actions","getSelectors","devices","selectDevicesEntities","selectById","selectIds","selectEntities","selectSelectedDevices","selectAll","selectTotal","configureStore","reducer","getDataReducer","devicesReducer","transitionDuration","GlobalStyle","createGlobalStyle","loaderColor","colors","hoverColor","circleStyle","animationParam","Wrapper","styled","div","props","top","Loader","size","Rotate","keyframes","ReverseRotate","Circle","Outter","Inner","Preloader","svg","attrs","version","xmlns","xmlnsXlink","CheckIcon","color","width","height","IconStyle","viewBox","fill","x1","y1","x2","y2","stroke","strokeWidth","extraTextColor","Label","label","SelectField","isSelected","DeviceSelector","deviceId","selectValue","dispatch","useDispatch","selectRef","useRef","inputName","selectorTitle","toggleSelect","useCallback","current","checked","htmlFor","title","onClick","ref","type","form","className","tabIndex","scrollColor","ul","DeviceSelection","useSelector","Object","entries","map","value","useVisitTime","useState","visitTime","setVisitTime","calcGreaterRoundNum","num","str","toString","length","at","multiplier","i","calcMultiplier","formatScaleNum","dig","Intl","NumberFormat","minimumFractionDigits","format","useTimeScale","timeScaleArr","setTimeScaleArr","diagramHeight","setDiagramHeight","setTimeScale","time","arr","maxNum","step","push","DiagramContext","createContext","DiagramContextProvider","timeScale","Provider","children","createWeekDayTimeObj","weekDays","visitors","obj","day","items","keys","calcVisitTime","timeData","devicesData","maxDayTime","weekDayTime","filter","key","dayNum","Date","getDay","user","vd","dayTime","values","reduce","acc","Math","max","Span","mount","ScaleItem","setMount","useEffect","Item","row","TimeScale","useContext","mainFill","Div","visitor","calcSize","Column","DayDiagram","visits","column","DayColumns","createGridColumn","mainTextColor","Day","WeekDays","firstLetterUpper","charAt","toUpperCase","slice","Repeat","count","gridBack","gridFill","gridBorder","Grid","GridBack","index","Diagram","devicesEntities","ItemWrap","Footer","Title","h2","DiagramField","ErrorLoad","text","App","backend","render","StrictMode","store","document","getElementById"],"mappings":"uRAEaA,EAAUC,YACrB,kBADqC,uCAErC,WAAgBC,EAAhB,sBAAAC,EAAA,6DAAyBC,EAAzB,EAAyBA,gBAAzB,kBAE2BC,MAAMH,GAFjC,WAEUI,EAFV,QAGkBC,GAHlB,sBAG4B,IAAIC,MAAM,gBAHtC,uBAIyBF,EAASG,OAJlC,cAIUC,EAJV,yBAKWA,GALX,2DAOWN,EAAgB,KAAMO,UAPjC,0DAFqC,yDAc1BC,EAAeC,YAAY,CACtCC,KAAM,UACNC,aAAc,CACZC,KAAM,KACNC,OAAQ,KACRC,MAAO,MAETC,SAAU,GACVC,eAAa,mBACVpB,EAAQqB,SAAU,SAAAC,GACjBA,EAAML,OAAS,UACfK,EAAMJ,MAAQ,QAHL,cAKVlB,EAAQuB,WAAY,SAACD,EAAOE,GAC3BF,EAAML,OAAS,UACfK,EAAMN,KAAOQ,EAAOC,WAPX,cASVzB,EAAQ0B,UAAW,SAACJ,EAAOE,GAC1BF,EAAML,OAAS,WACfK,EAAMJ,MAAQM,EAAOC,WAXZ,KAiBFE,EAAc,SAAAL,GAAK,OAAIA,EAAMtB,QAAQkB,OACrCU,EAAe,SAAAN,GAAK,OAAIA,EAAMtB,QAAQiB,QAEpCL,IAAf,Q,cCxCQiB,EAAqBC,EAArBD,iBAEFE,EAAiBC,YAAoB,CACzCC,SAAU,SAAAC,GAAM,OAAIA,EAAOC,GAC3BC,gBAAiB,KAGbC,EAAexB,YAAY,CAC/BC,KAAM,UACNC,aAAcgB,EAAeO,kBAC7BnB,SAAU,CACRoB,qBAAsB,SAACjB,EAAOE,GAC5B,IAAMgB,EAAKhB,EAAOC,QAClBH,EAAMc,gBAAgBI,IAAOlB,EAAMc,gBAAgBI,KAGvDpB,cAAc,eACXpB,EAAQuB,WAAY,SAACD,EAAOE,GAC3B,IAAMR,EAAOQ,EAAOC,QAAQT,KAAKyB,EACjCV,EAAeW,OAAOpB,EAAON,GAE7BA,EAAK2B,SAAQ,SAAAC,GACX,IACMC,EAAY,GAClBA,EAFiBD,EAAKT,GAEAN,EACtBP,EAAMc,gBAAN,2BACKd,EAAMc,iBACNS,WAOEN,EAAyBF,EAAaS,QAAtCP,qBAER,EAMHR,EAAegB,cAAa,SAAAzB,GAAK,OAAIA,EAAM0B,WAH7BC,GAHX,EACLC,WADK,EAELC,UAFK,EAGLC,gBAKWC,GARN,EAILC,UAJK,EAKLC,YAGmC,SAAAjC,GAAK,OAAIA,EAAM0B,QAAQZ,kBAE7CC,IAAf,QC9CemB,cAAe,CAC5BC,QAAS,CACPzD,QAAS0D,EACTV,QAASW,K,wBCJLC,GAAuB9B,EAAvB8B,mBAEKC,GAAcC,aAAH,mhNAuTIF,GACGA,GACJA,I,QC1TrBG,GAAcjC,EAAIkC,OAAOC,WAGzBC,GAAW,oBAAgBH,IAC3BI,GAAiB,+CAEjBC,GAAUC,KAAOC,IAAV,mOAMI,SAAAC,GAAK,OAAIA,EAAMC,OAK1BC,GAASJ,KAAOC,IAAV,qGACD,SAAAC,GAAK,OAAIA,EAAMG,MAAQ,UACtB,SAAAH,GAAK,OAAIA,EAAMG,MAAQ,UAK7BC,GAASC,aAAH,qMAUNC,GAAgBD,aAAH,uMAUbE,GAAST,KAAOC,IAAV,uIAIAJ,IAGNa,GAASV,aAAOS,GAAPT,CAAH,2KAKWM,GAAUR,GAClBQ,GAAUR,IAEnBa,GAAQX,aAAOS,GAAPT,CAAH,uKAKYQ,GAAiBV,GACzBU,GAAiBV,IAWjBc,GARG,SAAC,GAAD,QAAGP,YAAH,MAAU,GAAV,EAAcF,EAAd,EAAcA,IAAd,OAChB,eAACJ,GAAD,CAASI,IAAKA,EAAG,UAAMA,EAAN,MAAgB,OAAjC,SACE,gBAACC,GAAD,CAAQC,KAAI,UAAKA,EAAL,MAAZ,UACE,eAACK,GAAD,IACA,eAACC,GAAD,U,QC1ESX,QAAOa,IAAIC,MAAM,CAC5BC,QAAS,MACTC,MAAO,6BACPC,WAAY,gCAHDjB,CAAf,2BCCakB,GAAY,SAAC,GAAD,QACvBzE,YADuB,MAChB,QADgB,MAEvB0E,aAFuB,MAEf,eAFe,MAGvBC,aAHuB,MAGf,GAHe,MAIvBC,cAJuB,MAId,GAJc,SAMvB,gBAACC,GAAD,CAAWC,QAAQ,YAAYC,KAAK,OAAOJ,MAAOA,EAAOC,OAAQA,EAAjE,UACE,iCAAQ5E,IACR,uBACEgF,GAAG,UACHC,GAAG,UACHC,GAAG,UACHC,GAAG,UACHC,OAAQV,EACRW,YAAY,MAEd,uBACEL,GAAG,SACHC,GAAG,UACHC,GAAG,UACHC,GAAG,UACHC,OAAQV,EACRW,YAAY,UChBhBvC,GAEE9B,EAFF8B,mBADF,GAGI9B,EADFkC,OAAUC,GAFZ,GAEYA,WAAYmC,GAFxB,GAEwBA,eAGlBC,GAAQhC,KAAOiC,MAAV,uTAQAF,GAIEnC,GAEEA,IAITsC,GAAclC,KAAOC,IAAV,8QAQN8B,IAGM,SAAA7B,GAAK,OAAKA,EAAMiC,WAAa,WAAa,aAC/B5C,IAmCb6C,GA/BQ,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC5BC,EAAWC,eACXC,EAAYC,iBAAO,MACnBC,EAAS,uBAAmBN,GAC5BO,EAAa,kHAAyBP,GAEtCQ,EAAeC,uBAAY,WAC/BL,EAAUM,QAAQC,SAAWV,EAC7BC,EAASrE,EAAqBmE,MAC7B,CAACI,EAAWJ,EAAUC,EAAaC,IAEtC,OACE,8BACE,gBAACP,GAAD,CAAOiB,QAASN,EAAWO,MAAON,EAAeO,QAASN,EAA1D,UACE,wBACEO,IAAKX,EACLY,KAAK,WACLC,KAAK,gBACL7G,KAAMkG,EACNY,UAAU,kBACV,cAAY,OACZC,SAAS,OAEVnB,EACD,eAACH,GAAD,CAAaC,WAAYG,EAAzB,SACE,eAAC,GAAD,CAAW7F,KAAM4F,YCjErBoB,GAAchG,EAAIkC,OAAOoC,eAEzBhC,GAAUC,KAAO0D,GAAV,wRAYWD,ICnBTE,GDwBS,WACtB,IAAM5F,EAAkB6F,aAAY5E,GAEpC,OACE,eAAC,GAAD,UACGjB,GACC8F,OAAOC,QAAQ/F,GAAiBgG,KAAI,oCAAE5F,EAAF,KAAM6F,EAAN,YAClC,eAAC,GAAD,CAAyB3B,SAAUlE,EAAImE,YAAa0B,GAA/B7F,SE1BhB8F,GALM,WACnB,MAAkCC,mBAAS,MAA3C,oBAEA,MAAO,CAAEC,UAFT,KAEoBC,aAFpB,OCeaC,GAlBa,SAAAC,GAC1B,IAAMC,EAAMD,EAAIE,WAEhB,GAAID,EAAIE,QAAU,EAAG,OAAOH,EAa5B,QAXkBC,EAAIG,GAAG,GAAK,GAEP,WAGrB,IAFA,IAAIC,EAAa,EAERC,EAAI,EAAGA,GAAKL,EAAIE,OAAS,EAAGG,IACnCD,GAAc,GAEhB,OAAOA,EAGSE,ICTLC,GAPQ,SAAAC,GAKrB,OAJkB,IAAIC,KAAKC,aAAa,KAAM,CAC5CC,sBAAuB,IAGRC,OAAOJ,EAAM,MCwBjBK,GAzBM,WACnB,MAAwClB,mBAAS,MAAjD,oBAAOmB,EAAP,KAAqBC,EAArB,KACA,EAA0CpB,mBAAS,GAAnD,oBAAOqB,EAAP,KAAsBC,EAAtB,KAiBA,MAAO,CACLD,gBACAF,eACAI,aAlBmB3C,uBAAY,SAAA4C,GAC/B,IAAMC,EAAM,GACNC,EAASvB,GAAoBqB,GAC7BG,EAAOD,EAAS,EAEtBD,EAAIG,KAAKhB,GAAec,IAExB,IAAK,IAAIhB,EAAI,EAAGA,GAAK,EAAGA,IACtBe,EAAIG,KAAKhB,GAAee,EAAOjB,IAGjCY,EAAiBI,GACjBN,EAAgBK,KACf,MCjBQI,GAAiBC,0BAEjBC,GAAyB,SAAA/F,GACpC,IAAMiE,EAAYF,KACZiC,EAAYd,KAElB,OACE,eAACW,GAAeI,SAAhB,CACEnC,MAAO,CACLG,YACA+B,aAHJ,SAKGhG,EAAMkG,YCHEC,GAXc,WAC3B,IAAQC,EAAuB7I,EAAvB6I,SAAUC,EAAa9I,EAAb8I,SACZC,EAAM,GAOZ,OALAF,EAAShI,SAAQ,SAAAmI,GACf,IAAMC,EAAQ,GACd7C,OAAO8C,KAAKJ,GAAUjI,SAAQ,SAAAC,GAAI,OAAKmI,EAAMnI,GAAQ,KACrDiI,EAAIC,GAAOC,KAENF,GCuBMI,GA/BO,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACzBR,EAAa7I,EAAb6I,SACJS,EAAa,EAEXC,EAAcX,KAEd1H,EAAUkF,OAAO8C,KAAKG,GAAaG,QACvC,SAAAC,GAAG,OAAIJ,EAAYI,IAAQA,KAsB7B,OAFAvI,EAAQL,SAAQ,SAAAT,GAA4BgJ,EAAShJ,GAhB9CO,EAAEE,SAAQ,SAAAC,GACb,IAAM4I,EAAS,IAAIC,KAAK7I,EAAKT,GAAGuJ,SAC1BH,EAAMZ,EAASa,GAErB5I,EAAKH,EAAEE,SAAQ,SAAAgJ,GACbN,EAAYE,GAAKI,EAAKxJ,IAAMwJ,EAAKC,MAGnC,IAAMC,EAAU3D,OAAO4D,OAAOT,EAAYE,IAAMQ,QAC9C,SAACC,EAAKjC,GAAN,OAAgBiC,EAAOjC,IACvB,GAEFqB,EAAaa,KAAKC,IAAId,EAAYS,SAM/B,CAAER,cAAaD,eC5BhBxH,GAAuB9B,EAAvB8B,mBAEFuI,GAAO9H,KAAOC,IAAV,0EACG,SAAAC,GAAK,OAAKA,EAAM6H,MAAQ,EAAI,IACjBxI,IAYTyI,GATG,SAAC,GAAc,IAAZvL,EAAW,EAAXA,KACnB,EAA0ByH,oBAAS,GAAnC,oBAAO6D,EAAP,KAAcE,EAAd,KAMA,OAJAC,qBAAU,WACRzL,GAAQwL,GAAS,KAChB,CAACxL,IAEG,eAACqL,GAAD,CAAMC,MAAOA,EAAb,SAAqBtL,KCbxB0L,GAAOnI,KAAOC,IAAV,iKAEI,SAAAC,GAAK,OAAIA,EAAMkI,OCLdC,GDYG,WAChB,IACehD,EACXiD,qBAAWvC,IADbG,UAAab,aAGf,OACE,uCACGA,GACCA,EAAatB,KAAI,SAACxF,EAAMqG,GAAP,OACf,eAAC,GAAD,UACE,eAAC,GAAD,CAAWnI,KAAM8B,KADnB,UAAcA,EAAd,YAAsBqG,OAI1B,eAAC,GAAD,CAAMwD,IAAI,MAAV,mBErBJ7I,GAEE9B,EAFF8B,mBACUgJ,GACR9K,EADFkC,OAAU4I,SAGNC,GAAMxI,KAAOC,IAAV,yIAEG,SAAAC,GAAK,OAAIA,EAAMmB,UACL,SAAAnB,GAAK,OAAIA,EAAMiB,SAClB,SAAAjB,GAAK,OAAKA,EAAMmB,OAAN,oBAA4BkH,IAAa,SAC/ChJ,IAgBR4I,GAbF,SAAC,GAAuB,IAArBM,EAAoB,EAApBA,QAASpI,EAAW,EAAXA,KACjBkG,EAAW9I,EAAI8I,SAENhB,EACX+C,qBAAWvC,IADbG,UAAaX,cAGTmD,EAAW5F,uBACf,SAAAzC,GAAI,OAAKA,EAAI,UAAc,IAAPA,EAAckF,EAArB,KAAwC,IACrD,CAACA,IAGH,OAAO,eAACiD,GAAD,CAAKrH,MAAOoF,EAASkC,GAAStH,MAAOE,OAAQqH,EAASrI,MCzBzDsI,GAAS3I,KAAOC,IAAV,mHCFG2I,GDSI,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpB,OACE,eAACF,GAAD,UACG9E,OAAOC,QAAQ+E,GAAQ9E,KAAI,SAACxF,EAAMqG,GAAP,OAC1B,eAAC,GAAD,CAGE6D,QAASlK,EAAK,GACd8B,KAAM9B,EAAK,IAFNqG,SEZT7E,GAAUC,KAAOC,IAAV,0MAEI,SAAAC,GAAK,OAAIA,EAAM4I,UA8BjBC,GArBI,WACjB,IACe5E,EACXmE,qBAAWvC,IADb5B,UAAaA,UAGT6E,EAAmBlG,uBACvB,SAAAkB,GAAK,gBAAOA,EAAQ,EAAf,YAAoBA,EAAQ,KACjC,IAGF,OACE,qCACGG,GACCN,OAAO8C,KAAKxC,GAAWJ,KAAI,SAACxF,EAAMqG,GAAP,OACzB,eAAC,GAAD,CAA8BkE,OAAQE,EAAiBpE,GAAvD,SACE,eAAC,GAAD,CAAYiE,OAAQ1E,EAAU5F,MADhC,UAAiBA,EAAjB,YAAyBqG,UC1B3BqE,GAAkBxL,EAAIkC,OAAtBsJ,cAEFC,GAAMlJ,KAAOC,IAAV,0LAEQ,SAAAC,GAAK,OAAIA,EAAM4I,SAKNG,IAqBXE,GAlBE,WACf,IAAM7C,EAAW7I,EAAI6I,SAEf8C,EAAmBtG,uBACvB,SAAAyB,GAAG,OAAIA,EAAI8E,OAAO,GAAGC,cAAgB/E,EAAIgF,MAAM,KAC/C,IAGF,OACE,qCACGjD,EAASvC,KAAI,SAACtH,EAAMmI,GAAP,OACZ,eAACsE,GAAD,CAA0BJ,OAAQlE,EAAI,EAAtC,SACGwE,EAAiB3M,IADpB,UAAaA,EAAb,YAAqBmI,UClBd4E,GAPA,SAAAtJ,GAEb,IADA,IAAMwG,EAAQ,GACL9B,EAAI,EAAGA,EAAI1E,EAAMuJ,MAAO7E,IAC/B8B,EAAMZ,KAAK5F,EAAMkG,SAASxB,IAE5B,OAAO,qCAAG8B,KCFZ,GAAiCjJ,EAAIkC,OAAO+J,SAApCC,GAAR,GAAQA,SAAUC,GAAlB,GAAkBA,WAEZ7J,GAAUC,KAAOC,IAAV,uJAQP4J,GAAO7J,KAAOC,IAAV,8RAGY2J,GAKIA,GAGFD,ICxBTG,GD4BE,WACf,OACE,eAAC,GAAD,UACE,eAACD,GAAD,UACE,eAAC,GAAD,CAAQJ,MAAO,GAAf,SAAoB,SAAAM,GAAK,OAAI,wBAAUA,WElBzChK,GAAUC,KAAOC,IAAV,gNCdE+J,GDuBC,WACd,IAAMC,EAAkBrG,aAAYhF,GAC9Bb,EAAkB6F,aAAY5E,GACpC,EAGIsJ,qBAAWvC,IAFA3B,EADf,EACED,UAAaC,aACAqB,EAFf,EAEES,UAAaT,aAcf,OAXAyC,qBAAU,WACR,GAAI+B,GAAmBlM,EAAiB,CACtC,MAAoC6I,GAAc,CAChDC,SAAUoD,EACVnD,YAAa/I,IAFPiJ,EAAR,EAAQA,YAAaD,EAArB,EAAqBA,WAIrB3C,EAAa4C,GACbvB,EAAasB,MAEd,CAACkD,EAAiBlM,EAAiBqG,EAAcqB,IAGlD,gBAAC,GAAD,WACE,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,QE5CJc,GAEE9I,EAFF8I,SACUxE,GACRtE,EADFkC,OAAUoC,eAGNhC,GAAUC,KAAOC,IAAV,yFAKPiK,GAAWlK,KAAOC,IAAV,mQAQU,SAAAC,GAAK,OAAIA,EAAMiB,QAI1BY,IAGPoG,GAAO,SAAC,GAAD,IAAG1L,EAAH,EAAGA,KAAM0E,EAAT,EAASA,MAAT,OACX,gBAAC+I,GAAD,CAAU/I,MAAOA,EAAjB,UACE,yBACA,gCAAO1E,QAWI0N,GAPA,kBACb,eAAC,GAAD,UACGtG,OAAO4D,OAAOlB,IAAUxC,KAAI,gBAAGtH,EAAH,EAAGA,KAAM0E,EAAT,EAASA,MAAT,OAC3B,eAAC,GAAD,CAAyB1E,KAAMA,EAAM0E,MAAOA,GAAjC1E,EAAO0E,SC/BxB,GAA0C1D,EAAIkC,OAAtCsJ,GAAR,GAAQA,cAAelH,GAAvB,GAAuBA,eAEjBhC,GAAUC,KAAOC,IAAV,0LAOS8B,IAEhBqI,GAAQpK,KAAOqK,GAAV,4GACApB,IClBIqB,GDwBM,WACnB,OACE,gBAAC,GAAD,WACE,eAACF,GAAD,gDACA,eAAC,GAAD,UACE,eAAC,GAAD,MAEF,eAAC,GAAD,QE9BArK,GAAUC,KAAOC,IAAV,2WA+BEsK,GATG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,gBAAC,GAAD,WACE,sDACA,+BAAIA,EAAJ,OACA,4DCOSC,OA1Bf,WACE,IAAM5O,EAAQ4B,EAAIiN,QAAQ7O,MAGpB0G,EAAWC,eACX3F,EAAQ+G,aAAYtG,GACpBV,EAASgH,aAAYrG,GAM3B,OAJA2K,qBAAU,WACR3F,EAAS5G,EAAQE,MAChB,CAAC0G,EAAU1G,IAGZ,uCACE,eAAC2D,GAAD,IACY,YAAX5C,GACC,uCACE,eAAC,GAAD,IACA,eAAC,GAAD,OAGQ,YAAXA,GAAwB,eAAC,GAAD,IACxBC,GAAS,eAAC,GAAD,CAAW2N,KAAM3N,QCnBjC8N,iBAPE,eAAC,IAAMC,WAAP,UACE,eAAC,KAAD,CAAUC,MAAOA,EAAjB,SACE,eAAC,GAAD,QAKQC,SAASC,eAAe,U","file":"static/js/main.f1994208.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const getData = createAsyncThunk(\r\n  'getData/fetchDb',\r\n  async function (dbUrl, { rejectWithValue }) {\r\n    try {\r\n      const response = await fetch(dbUrl);\r\n      if (!response.ok) throw new Error('Server error');\r\n      const result = await response.json();\r\n      return result;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const getDataSlice = createSlice({\r\n  name: 'getData',\r\n  initialState: {\r\n    data: null,\r\n    status: null,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getData.pending]: state => {\r\n      state.status = 'loading';\r\n      state.error = null;\r\n    },\r\n    [getData.fulfilled]: (state, action) => {\r\n      state.status = 'success';\r\n      state.data = action.payload;\r\n    },\r\n    [getData.rejected]: (state, action) => {\r\n      state.status = 'rejected';\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectData = state => state.getData.data;\r\nexport const selectError = state => state.getData.error;\r\nexport const selectStatus = state => state.getData.status;\r\n\r\nexport default getDataSlice.reducer;\r\n","import { createSlice, createEntityAdapter } from '@reduxjs/toolkit';\r\nimport { getData } from './getDataSlice';\r\nimport env from '../env.json';\r\n\r\nconst { initDevicesCheck } = env;\r\n\r\nconst devicesAdapter = createEntityAdapter({\r\n  selectId: device => device.n,\r\n  selectedDevices: {},\r\n});\r\n\r\nconst devicesSlice = createSlice({\r\n  name: 'devices',\r\n  initialState: devicesAdapter.getInitialState(),\r\n  reducers: {\r\n    toggleSelectedDevice: (state, action) => {\r\n      const id = action.payload;\r\n      state.selectedDevices[id] = !state.selectedDevices[id];\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getData.fulfilled]: (state, action) => {\r\n      const data = action.payload.data.o;\r\n      devicesAdapter.setAll(state, data);\r\n\r\n      data.forEach(item => {\r\n        const deviceId = item.n;\r\n        const selection = {};\r\n        selection[deviceId] = initDevicesCheck;\r\n        state.selectedDevices = {\r\n          ...state.selectedDevices,\r\n          ...selection,\r\n        };\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleSelectedDevice } = devicesSlice.actions;\r\n\r\nexport const {\r\n  selectById: selectDevicesById,\r\n  selectIds: selectDevicesIds,\r\n  selectEntities: selectDevicesEntities,\r\n  selectAll: selectAllDevices,\r\n  selectTotal: selectTotalDevices,\r\n} = devicesAdapter.getSelectors(state => state.devices);\r\n\r\nexport const selectSelectedDevices = state => state.devices.selectedDevices;\r\n\r\nexport default devicesSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport getDataReducer from './getDataSlice';\r\nimport devicesReducer from './devicesSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    getData: getDataReducer,\r\n    devices: devicesReducer,\r\n  },\r\n});\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport env from '../../env.json';\r\n\r\nconst { transitionDuration } = env;\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    /* fonts */\r\n    @font-face {\r\n        font-family: 'Roboto';\r\n        src: local('Roboto'), local('Roboto-Regular'),\r\n            url('../fonts/Roboto.woff2') format('woff2'),\r\n            url('../fonts/Roboto.woff') format('woff');\r\n        font-weight: 400;\r\n        font-display: swap;\r\n    }\r\n\r\n    @font-face {\r\n        font-family: 'Roboto';\r\n        src: local('Roboto Medium'), local('Roboto-Medium'),\r\n            url('../fonts/Robotomedium.woff2') format('woff2'),\r\n            url('../fonts/Robotomedium.woff') format('woff');\r\n        font-weight: 500;\r\n        font-style: normal;\r\n        font-display: swap;\r\n    }\r\n\r\n    @font-face {\r\n        font-family: 'Roboto';\r\n        src: local('Roboto Bold'), local('Roboto-Bold'),\r\n            url('../fonts/Robotobold.woff2') format('woff2'),\r\n            url('../fonts/Robotobold.woff') format('woff');\r\n        font-weight: 700;\r\n        font-style: normal;\r\n        font-display: swap;\r\n    }\r\n    /* reset styles */\r\n    /* Document */\r\n    html {\r\n        line-height: 1.15;\r\n        -webkit-text-size-adjust: 100%;\r\n        -webkit-tap-highlight-color: transparent;\r\n    }\r\n\r\n    *,\r\n    *::before,\r\n    *::after {\r\n        -webkit-box-sizing: inherit;\r\n            box-sizing: inherit;\r\n        border-style: solid;\r\n        border-width: 0;\r\n    }\r\n\r\n     /* Sections */\r\n    body {\r\n        min-width: 320px;\r\n        min-height: 100vh;\r\n        margin: 0;\r\n        background-color: #fff;\r\n        font-family: 'Roboto', Arial, sans-serif;\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n        line-height: 1;\r\n        color: black;\r\n        overflow-x: hidden;\r\n\r\n    }\r\n    main {\r\n        display: block;\r\n    }\r\n\r\n    /* Vertical rhythm */\r\n    p,\r\n    table,\r\n    blockquote,\r\n    address,\r\n    pre,\r\n    iframe,\r\n    form,\r\n    figure,\r\n    dl {\r\n        margin: 0;\r\n    }\r\n\r\n    /* Headings */\r\n    h1,\r\n    h2,\r\n    h3,\r\n    h4,\r\n    h5,\r\n    h6 {\r\n        font-size: inherit;\r\n        font-weight: inherit;\r\n        margin: 0;\r\n    }\r\n\r\n    /* Lists (enumeration) */\r\n    ul,\r\n    ol {\r\n        margin: 0;\r\n        padding: 0;\r\n        list-style: none;\r\n    }\r\n\r\n    /* Lists (definition) */\r\n    dt {\r\n        font-weight: bold;\r\n    }\r\n\r\n    dd {\r\n        margin-left: 0;\r\n    }\r\n\r\n    /* Grouping content */\r\n    hr {\r\n        box-sizing: content-box;\r\n        height: 0;\r\n        overflow: visible;\r\n        border-top-width: 1px;\r\n        margin: 0;\r\n        clear: both;\r\n        color: inherit;\r\n    }\r\n\r\n    pre {\r\n        font-family: monospace, monospace;\r\n        font-size: inherit;\r\n    }\r\n\r\n    address {\r\n        font-style: inherit;\r\n    }\r\n\r\n    /* Text-level semantics */\r\n    a {\r\n        background-color: transparent;\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n\r\n    abbr[title] {\r\n        text-decoration: underline dotted;\r\n    }\r\n\r\n    b,\r\n    strong {\r\n        font-weight: bolder;\r\n    }\r\n\r\n    code,\r\n    kbd,\r\n    samp {\r\n        font-family: monospace, monospace;\r\n        font-size: inherit;\r\n    }\r\n\r\n    small {\r\n        font-size: 80%;\r\n    }\r\n\r\n    sub,\r\n    sup {\r\n        font-size: 75%;\r\n        line-height: 0;\r\n        position: relative;\r\n        vertical-align: baseline;\r\n    }\r\n\r\n    sub {\r\n        bottom: -0.25em;\r\n    }\r\n\r\n    sup {\r\n        top: -0.5em;\r\n    }\r\n\r\n    /* Replaced content */\r\n    svg,\r\n    img,\r\n    embed,\r\n    object,\r\n    iframe {\r\n        vertical-align: bottom;\r\n    }\r\n\r\n    /* Forms */\r\n    button,\r\n    input,\r\n    optgroup,\r\n    select,\r\n    textarea {\r\n        -webkit-appearance: none;\r\n            appearance: none;\r\n        vertical-align: middle;\r\n        color: inherit;\r\n        font: inherit;\r\n        background: transparent;\r\n        padding: 0;\r\n        margin: 0;\r\n        border-radius: 0;\r\n        text-align: inherit;\r\n        text-transform: inherit;\r\n    }\r\n\r\n    [type=\"radio\"] {\r\n        -webkit-appearance: radio;\r\n            appearance: radio;\r\n    }\r\n\r\n    button,\r\n    [type=\"button\"],\r\n    [type=\"reset\"],\r\n    [type=\"submit\"] {\r\n        cursor: pointer;\r\n    }\r\n\r\n    button:disabled,\r\n    [type=\"button\"]:disabled,\r\n    [type=\"reset\"]:disabled,\r\n    [type=\"submit\"]:disabled {\r\n        cursor: default;\r\n    }\r\n\r\n    :-moz-focusring {\r\n        outline: auto;\r\n    }\r\n\r\n    select:disabled {\r\n        opacity: inherit;\r\n    }\r\n\r\n    option {\r\n        padding: 0;\r\n    }\r\n\r\n    fieldset {\r\n        margin: 0;\r\n        padding: 0;\r\n        min-width: 0;\r\n    }\r\n\r\n    legend {\r\n        padding: 0;\r\n    }\r\n\r\n    progress {\r\n        vertical-align: baseline;\r\n    }\r\n\r\n    textarea {\r\n        overflow: auto;\r\n    }\r\n\r\n    [type=\"number\"]::-webkit-inner-spin-button,\r\n    [type=\"number\"]::-webkit-outer-spin-button {\r\n        height: auto;\r\n    }\r\n\r\n    [type=\"search\"] {\r\n        outline-offset: -2px;\r\n    }\r\n\r\n    [type=\"search\"]::-webkit-search-decoration {\r\n        -webkit-appearance: none;\r\n    }\r\n\r\n    ::-webkit-file-upload-button {\r\n        -webkit-appearance: button;\r\n        font: inherit;\r\n    }\r\n\r\n    label[for] {\r\n        cursor: pointer;\r\n    }\r\n\r\n    /* Interactive */\r\n    details {\r\n        display: block;\r\n    }\r\n\r\n    summary {\r\n        display: list-item;\r\n    }\r\n\r\n    [contenteditable]:focus {\r\n        outline: auto;\r\n    }\r\n\r\n    /* Tables */\r\n    table {\r\n        border-color: inherit;\r\n    }\r\n\r\n    caption {\r\n        text-align: left;\r\n    }\r\n\r\n    td,\r\n    th {\r\n        vertical-align: top;\r\n        padding: 0;\r\n    }\r\n\r\n    th {\r\n        text-align: left;\r\n        font-weight: bold;\r\n    }\r\n\r\n    img {\r\n        width: 100%;\r\n        height: auto;\r\n        object-fit: cover;\r\n        /* aspect-ratio: attr(width) / attr(height); */\r\n    }\r\n\r\n    button,\r\n    a {\r\n        transition: color ${transitionDuration},\r\n            background-color ${transitionDuration},\r\n            border-color ${transitionDuration};\r\n    }\r\n\r\n    :active, :hover, :focus {\r\n        outline: 0;\r\n        outline-offset: 0;\r\n    }\r\n\r\n    #root {\r\n        -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n        width: 700px;\r\n        height: 350px;\r\n        margin: auto;\r\n        display:flex;\r\n        gap: 5px;\r\n        /* fix place for scroll */\r\n        /* scrollbar-gutter: stable; */\r\n    }\r\n\r\n    .visually-hidden {\r\n        position: absolute !important;\r\n        transform: scale(0);\r\n        visibility: hidden !important;\r\n        /*listener насквозь*/\r\n        pointer-events: none !important;\r\n        -webkit-user-select: none !important;\r\n        -moz-user-select: none !important;\r\n        -ms-user-select: none !important;\r\n        user-select: none !important;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport env from '../../env.json';\r\n\r\nconst loaderColor = env.colors.hoverColor;\r\n\r\n// loader expect props size us num\r\nconst circleStyle = `4px solid ${loaderColor}`;\r\nconst animationParam = '1s cubic-bezier(.42, .61, .58, .41) infinite';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  padding-top: ${props => props.top};\r\n  padding-left: 50px;\r\n  padding-right: 50px;\r\n  padding-bottom: 50px;\r\n`;\r\nconst Loader = styled.div`\r\n  width: ${props => props.size || '90px'};\r\n  height: ${props => props.size || '90px'};\r\n  border-radius: 50%;\r\n  display: grid;\r\n`;\r\n//direction keyframes\r\nconst Rotate = keyframes`\r\n  from {\r\n    -webkit-transform: rotate(0deg);\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    -webkit-transform: rotate(360deg);\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\nconst ReverseRotate = keyframes`\r\n  from {\r\n    -webkit-transform: rotate(0deg);\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    -webkit-transform: rotate(-360deg);\r\n    transform: rotate(-360deg);\r\n  }\r\n`;\r\nconst Circle = styled.div`\r\n  grid-area: 1/-1;\r\n  align-self: center;\r\n  justify-self: center;\r\n  border: ${circleStyle};\r\n  border-radius: 50%;\r\n`;\r\nconst Outter = styled(Circle)`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-bottom: 0;\r\n  border-left-color: transparent;\r\n  -webkit-animation: ${Rotate} ${animationParam};\r\n  animation: ${Rotate} ${animationParam};\r\n`;\r\nconst Inner = styled(Circle)`\r\n  width: 75%;\r\n  height: 75%;\r\n  border-right: 0;\r\n  border-top-color: transparent;\r\n  -webkit-animation: ${ReverseRotate} ${animationParam};\r\n  animation: ${ReverseRotate} ${animationParam};\r\n`;\r\n\r\nconst Preloader = ({ size = 90, top }) => (\r\n  <Wrapper top={top ? `${top}px` : '50px'}>\r\n    <Loader size={`${size}px`}>\r\n      <Outter />\r\n      <Inner />\r\n    </Loader>\r\n  </Wrapper>\r\n);\r\nexport default Preloader;\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.svg.attrs({\r\n    version: '1.1',\r\n    xmlns: 'http://www.w3.org/2000/svg',\r\n    xmlnsXlink: 'http://www.w3.org/1999/xlink',\r\n})``","import React from 'react';\r\nimport IconStyle from './IconStyle';\r\n\r\nexport const CheckIcon = ({\r\n  name = 'Check',\r\n  color = 'currentColor',\r\n  width = 24,\r\n  height = 20,\r\n}) => (\r\n  <IconStyle viewBox=\"0 0 24 20\" fill=\"none\" width={width} height={height}>\r\n    <title>{name}</title>\r\n    <line\r\n      x1=\"1.06066\"\r\n      y1=\"11.5659\"\r\n      x2=\"8.06066\"\r\n      y2=\"18.5659\"\r\n      stroke={color}\r\n      strokeWidth=\"3\"\r\n    />\r\n    <line\r\n      x1=\"6.2953\"\r\n      y1=\"18.5659\"\r\n      x2=\"22.9218\"\r\n      y2=\"1.93934\"\r\n      stroke={color}\r\n      strokeWidth=\"3\"\r\n    />\r\n  </IconStyle>\r\n);\r\n","import React, { useRef, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport env from '../../env.json';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toggleSelectedDevice } from '../../store/devicesSlice';\r\n\r\nimport { CheckIcon } from '../Icons';\r\n\r\nconst {\r\n  transitionDuration,\r\n  colors: { hoverColor, extraTextColor },\r\n} = env;\r\n\r\nconst Label = styled.label`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 5px 10px;\r\n  font-size: 14px;\r\n  line-height: 16px;\r\n  color: ${extraTextColor};\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: ${hoverColor};\r\n    & > div > svg {\r\n      color: ${hoverColor};\r\n    }\r\n  }\r\n`;\r\nconst SelectField = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: transparent;\r\n  border: none;\r\n  color: ${extraTextColor};\r\n\r\n  & > svg {\r\n    transform: ${props => (props.isSelected ? 'scale(1)' : 'scale(0)')};\r\n    transition: transform ${transitionDuration};\r\n  }\r\n`;\r\n\r\nconst DeviceSelector = ({ deviceId, selectValue }) => {\r\n  const dispatch = useDispatch();\r\n  const selectRef = useRef(null);\r\n  const inputName = `dev-selector-${deviceId}`;\r\n  const selectorTitle = `Выбрать устройство ${deviceId}`;\r\n\r\n  const toggleSelect = useCallback(() => {\r\n    selectRef.current.checked = !selectValue;\r\n    dispatch(toggleSelectedDevice(deviceId));\r\n  }, [selectRef, deviceId, selectValue, dispatch]);\r\n\r\n  return (\r\n    <li>\r\n      <Label htmlFor={inputName} title={selectorTitle} onClick={toggleSelect}>\r\n        <input\r\n          ref={selectRef}\r\n          type=\"checkbox\"\r\n          form=\"dev-selectors\"\r\n          name={inputName}\r\n          className=\"visually-hidden\"\r\n          aria-hidden=\"true\"\r\n          tabIndex=\"-1\"\r\n        />\r\n        {deviceId}\r\n        <SelectField isSelected={selectValue}>\r\n          <CheckIcon name={deviceId} />\r\n        </SelectField>\r\n      </Label>\r\n    </li>\r\n  );\r\n};\r\nexport default DeviceSelector;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectSelectedDevices } from '../../store/devicesSlice';\r\nimport env from '../../env.json';\r\n\r\nimport DeviceSelector from './DeviceSelector';\r\nconst scrollColor = env.colors.extraTextColor;\r\n\r\nconst Wrapper = styled.ul`\r\n  width: 130px;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  padding: 5px 10px 5px 0px;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 5px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: ${scrollColor};\r\n    border-radius: 100px;\r\n  }\r\n`;\r\n\r\nconst DeviceSelection = () => {\r\n  const selectedDevices = useSelector(selectSelectedDevices);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {selectedDevices &&\r\n        Object.entries(selectedDevices).map(([id, value]) => (\r\n          <DeviceSelector key={id} deviceId={id} selectValue={value} />\r\n        ))}\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default DeviceSelection;\r\n","import DeviceSelection from './DeviceSelection';\r\n\r\nexport default DeviceSelection;\r\n","import { useState } from 'react';\r\n\r\nconst useVisitTime = () => {\r\n  const [visitTime, setVisitTime] = useState(null);\r\n\r\n  return { visitTime, setVisitTime };\r\n};\r\nexport default useVisitTime;\r\n","const calcGreaterRoundNum = num => {\r\n  const str = num.toString();\r\n\r\n  if (str.length <= 1) return num;\r\n\r\n  const firstDig = +str.at(0) + 1;\r\n\r\n  const calcMultiplier = () => {\r\n    let multiplier = 1;\r\n\r\n    for (let i = 1; i <= str.length - 1; i++) {\r\n      multiplier *= 10;\r\n    }\r\n    return multiplier;\r\n  };\r\n\r\n  return firstDig * calcMultiplier();\r\n};\r\nexport default calcGreaterRoundNum;\r\n","const formatScaleNum = dig => {\r\n  const formatter = new Intl.NumberFormat('ru', {\r\n    minimumFractionDigits: 3,\r\n  });\r\n\r\n  return formatter.format(dig / 1000);\r\n};\r\nexport default formatScaleNum;\r\n","import { useState, useCallback } from 'react';\r\nimport calcGreaterRoundNum from '../helpers/calcGreaterRoundNum';\r\nimport formatScaleNum from '../helpers/formatScaleNum';\r\n\r\nconst useTimeScale = () => {\r\n  const [timeScaleArr, setTimeScaleArr] = useState(null);\r\n  const [diagramHeight, setDiagramHeight] = useState(0);\r\n\r\n  const setTimeScale = useCallback(time => {\r\n    const arr = [];\r\n    const maxNum = calcGreaterRoundNum(time);\r\n    const step = maxNum / 4;\r\n\r\n    arr.push(formatScaleNum(maxNum));\r\n\r\n    for (let i = 3; i >= 1; i--) {\r\n      arr.push(formatScaleNum(step * i));\r\n    }\r\n\r\n    setDiagramHeight(maxNum);\r\n    setTimeScaleArr(arr);\r\n  }, []);\r\n\r\n  return {\r\n    diagramHeight,\r\n    timeScaleArr,\r\n    setTimeScale,\r\n  };\r\n};\r\nexport default useTimeScale;\r\n","import React, { createContext } from 'react';\r\nimport useVisitTime from '../hooks/useVisitTime';\r\nimport useTimeScale from '../hooks/useTimeScale';\r\n\r\nexport const DiagramContext = createContext();\r\n\r\nexport const DiagramContextProvider = props => {\r\n  const visitTime = useVisitTime();\r\n  const timeScale = useTimeScale();\r\n\r\n  return (\r\n    <DiagramContext.Provider\r\n      value={{\r\n        visitTime,\r\n        timeScale,\r\n      }}>\r\n      {props.children}\r\n    </DiagramContext.Provider>\r\n  );\r\n};\r\n","import env from '../env.json';\r\n\r\nconst createWeekDayTimeObj = () => {\r\n  const { weekDays, visitors } = env;\r\n  const obj = {};\r\n\r\n  weekDays.forEach(day => {\r\n    const items = {};\r\n    Object.keys(visitors).forEach(item => (items[item] = 0));\r\n    obj[day] = items;\r\n  });\r\n  return obj;\r\n};\r\nexport default createWeekDayTimeObj;\r\n","import env from '../env.json';\r\nimport createWeekDayTimeObj from './createWeekDayTimeObj';\r\n\r\nconst calcVisitTime = ({ timeData, devicesData }) => {\r\n  const { weekDays } = env;\r\n  let maxDayTime = 0;\r\n\r\n  const weekDayTime = createWeekDayTimeObj();\r\n\r\n  const devices = Object.keys(devicesData).filter(\r\n    key => devicesData[key] && key,\r\n  );\r\n\r\n  const reduceWeekDayTime = data => {\r\n    data.o.forEach(item => {\r\n      const dayNum = new Date(item.n).getDay();\r\n      const key = weekDays[dayNum];\r\n\r\n      item.o.forEach(user => {\r\n        weekDayTime[key][user.n] += user.vd;\r\n      });\r\n\r\n      const dayTime = Object.values(weekDayTime[key]).reduce(\r\n        (acc, time) => (acc += time),\r\n        0,\r\n      );\r\n      maxDayTime = Math.max(maxDayTime, dayTime);\r\n    });\r\n  };\r\n\r\n  devices.forEach(device => reduceWeekDayTime(timeData[device]));\r\n\r\n  return { weekDayTime, maxDayTime };\r\n};\r\nexport default calcVisitTime;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport env from '../../env.json';\r\n\r\nconst { transitionDuration } = env;\r\n\r\nconst Span = styled.div`\r\n  opacity: ${props => (props.mount ? 1 : 0)};\r\n  transition: opacity ${transitionDuration};\r\n`;\r\n\r\nconst ScaleItem = ({ name }) => {\r\n  const [mount, setMount] = useState(false);\r\n\r\n  useEffect(() => {\r\n    name && setMount(true);\r\n  }, [name]);\r\n\r\n  return <Span mount={mount}>{name}</Span>;\r\n};\r\nexport default ScaleItem;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { DiagramContext } from '../../context';\r\nimport ScaleItem from './ScaleItem';\r\n\r\nconst Item = styled.div`\r\n  grid-column: 1;\r\n  grid-row: ${props => props.row};\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  padding-right: 5px;\r\n`;\r\n\r\nconst TimeScale = () => {\r\n  const {\r\n    timeScale: { timeScaleArr },\r\n  } = useContext(DiagramContext);\r\n\r\n  return (\r\n    <>\r\n      {timeScaleArr &&\r\n        timeScaleArr.map((item, i) => (\r\n          <Item key={`${item}-${i}`}>\r\n            <ScaleItem name={item} />\r\n          </Item>\r\n        ))}\r\n      <Item row=\"5/7\">0</Item>\r\n    </>\r\n  );\r\n};\r\nexport default TimeScale;\r\n","import TimeScale from './TimeScale';\r\n\r\nexport default TimeScale;\r\n","import React, { useContext, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport env from '../../env.json';\r\nimport { DiagramContext } from '../../context';\r\n\r\nconst {\r\n  transitionDuration,\r\n  colors: { mainFill },\r\n} = env;\r\n\r\nconst Div = styled.div`\r\n  width: 100%;\r\n  height: ${props => props.height};\r\n  background-color: ${props => props.color};\r\n  border-bottom: ${props => (props.height ? `1px solid ${mainFill}` : 'none')};\r\n  transition: height ${transitionDuration};\r\n`;\r\n\r\nconst Item = ({ visitor, size }) => {\r\n  const visitors = env.visitors;\r\n  const {\r\n    timeScale: { diagramHeight },\r\n  } = useContext(DiagramContext);\r\n\r\n  const calcSize = useCallback(\r\n    size => (size ? `${(size * 100) / diagramHeight}%` : 0),\r\n    [diagramHeight],\r\n  );\r\n\r\n  return <Div color={visitors[visitor].color} height={calcSize(size)} />;\r\n};\r\nexport default Item;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Item from './Item';\r\n\r\nconst Column = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n`;\r\n\r\nconst DayDiagram = ({ visits }) => {\r\n  return (\r\n    <Column>\r\n      {Object.entries(visits).map((item, i) => (\r\n        <Item\r\n          // key={`${item[0]}-${item[1]}-${i}`}\r\n          key={i}\r\n          visitor={item[0]}\r\n          size={item[1]}\r\n        />\r\n      ))}\r\n    </Column>\r\n  );\r\n};\r\nexport default DayDiagram;\r\n","import DayDiagram from './DayDiagram';\r\n\r\nexport default DayDiagram;\r\n","import React, { useContext, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { DiagramContext } from '../../context';\r\nimport DayDiagram from '../DayDiagram';\r\n\r\nconst Wrapper = styled.div`\r\n  place-self: end center;\r\n  grid-column: ${props => props.column};\r\n  grid-row: 1/6;\r\n  width: 50%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  padding-top: 25px;\r\n`;\r\n\r\nconst DayColumns = () => {\r\n  const {\r\n    visitTime: { visitTime },\r\n  } = useContext(DiagramContext);\r\n\r\n  const createGridColumn = useCallback(\r\n    value => `${value + 2}/${value + 3}`,\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {visitTime &&\r\n        Object.keys(visitTime).map((item, i) => (\r\n          <Wrapper key={`${item}-${i}`} column={createGridColumn(i)}>\r\n            <DayDiagram visits={visitTime[item]} />\r\n          </Wrapper>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\nexport default DayColumns;\r\n","import React, { useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport env from '../../env.json';\r\n\r\nconst { mainTextColor } = env.colors;\r\n\r\nconst Day = styled.div`\r\n  grid-row: 6;\r\n  grid-column: ${props => props.column};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  border-top: 2px solid ${mainTextColor};\r\n`;\r\n\r\nconst WeekDays = () => {\r\n  const weekDays = env.weekDays;\r\n\r\n  const firstLetterUpper = useCallback(\r\n    str => str.charAt(0).toUpperCase() + str.slice(1),\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {weekDays.map((name, i) => (\r\n        <Day key={`${name}-${i}`} column={i + 2}>\r\n          {firstLetterUpper(name)}\r\n        </Day>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nexport default WeekDays;\r\n","import React from 'react';\r\n\r\nconst Repeat = props => {\r\n  const items = [];\r\n  for (let i = 0; i < props.count; i++) {\r\n    items.push(props.children(i));\r\n  }\r\n  return <>{items}</>;\r\n};\r\nexport default Repeat;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport env from '../../env.json';\r\nimport Repeat from './Repeat';\r\n\r\nconst { gridFill, gridBorder } = env.colors.gridBack;\r\n\r\nconst Wrapper = styled.div`\r\n  grid-row: 1/5;\r\n  grid-column: 2/9;\r\n  display: flex;\r\n  flex-direction: column;\r\n  z-index: -1;\r\n  padding-top: 25px;\r\n`;\r\nconst Grid = styled.div`\r\n  width: 100%;\r\n  flex-grow: 1;\r\n  background-color: ${gridBorder};\r\n  display: grid;\r\n  grid-template-columns: 1fr repeat(6, 2fr) 1fr;\r\n  grid-template-rows: repeat(4, 50px);\r\n  gap: 1px;\r\n  border-top: 1px solid ${gridBorder};\r\n\r\n  & > div {\r\n    background-color: ${gridFill};\r\n  }\r\n`;\r\n\r\nconst GridBack = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Grid>\r\n        <Repeat count={32}>{index => <div key={index} />}</Repeat>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default GridBack;\r\n","import GridBack from './GridBack';\r\n\r\nexport default GridBack;\r\n","import React, { useEffect, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { DiagramContext } from '../../context';\r\nimport {\r\n  selectDevicesEntities,\r\n  selectSelectedDevices,\r\n} from '../../store/devicesSlice';\r\nimport calcVisitTime from '../../helpers/calcVisitTime';\r\n\r\nimport TimeScale from '../TimeScale';\r\nimport DayColumns from './DayColumns';\r\nimport WeekDays from './WeekDays';\r\nimport GridBack from '../GridBack';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 258px;\r\n  display: grid;\r\n  grid-template-columns: 80px repeat(7, 1fr);\r\n  grid-template-rows: repeat(4, 51px) repeat(2, 25px);\r\n  padding-right: 30px;\r\n`;\r\n\r\nconst Diagram = () => {\r\n  const devicesEntities = useSelector(selectDevicesEntities);\r\n  const selectedDevices = useSelector(selectSelectedDevices);\r\n  const {\r\n    visitTime: { setVisitTime },\r\n    timeScale: { setTimeScale },\r\n  } = useContext(DiagramContext);\r\n\r\n  useEffect(() => {\r\n    if (devicesEntities && selectedDevices) {\r\n      const { weekDayTime, maxDayTime } = calcVisitTime({\r\n        timeData: devicesEntities,\r\n        devicesData: selectedDevices,\r\n      });\r\n      setVisitTime(weekDayTime);\r\n      setTimeScale(maxDayTime);\r\n    }\r\n  }, [devicesEntities, selectedDevices, setVisitTime, setTimeScale]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <TimeScale />\r\n      <DayColumns />\r\n      <WeekDays />\r\n      <GridBack />\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default Diagram;\r\n","import Diagram from './Diagram';\r\n\r\nexport default Diagram;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport env from '../../env.json';\r\n\r\nconst {\r\n  visitors,\r\n  colors: { extraTextColor },\r\n} = env;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 15px;\r\n`;\r\nconst ItemWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 5px;\r\n  & > div {\r\n    width: 15px;\r\n    height: 8px;\r\n    background-color: ${props => props.color};\r\n  }\r\n  & > span {\r\n    font-size: 10px;\r\n    color: ${extraTextColor};\r\n  }\r\n`;\r\nconst Item = ({ name, color }) => (\r\n  <ItemWrap color={color}>\r\n    <div />\r\n    <span>{name}</span>\r\n  </ItemWrap>\r\n);\r\n\r\nconst Footer = () => (\r\n  <Wrapper>\r\n    {Object.values(visitors).map(({ name, color }) => (\r\n      <Item key={name + color} name={name} color={color} />\r\n    ))}\r\n  </Wrapper>\r\n);\r\nexport default Footer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport env from '../../env.json';\r\nimport { DiagramContextProvider } from '../../context';\r\n\r\nimport Diagram from '../Diagram';\r\nimport Footer from './Footer';\r\n\r\nconst { mainTextColor, extraTextColor } = env.colors;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  flex-grow: 1;\r\n  height: 100%;\r\n  padding: 10px;\r\n  border: 1px solid ${extraTextColor};\r\n`;\r\nconst Title = styled.h2`\r\n  color: ${mainTextColor};\r\n  padding-left: 80px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst DiagramField = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Title>Total views: Age (by day of week)</Title>\r\n      <DiagramContextProvider>\r\n        <Diagram />\r\n      </DiagramContextProvider>\r\n      <Footer />\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default DiagramField;\r\n","import DiagramField from './DiagramField';\r\n\r\nexport default DiagramField;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.4);\r\n  z-index: 1001;\r\n  padding-top: 100px;\r\n  font-size: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 20px;\r\n\r\n  & > p {\r\n    max-width: 80%;\r\n    text-align: center;\r\n    color: #fe3b3b;\r\n  }\r\n`;\r\n\r\nconst ErrorLoad = ({ text }) => {\r\n  return (\r\n    <Wrapper>\r\n      <p>Sorry, nework error:</p>\r\n      <p>{text}.</p>\r\n      <p>We will fix it soon...</p>\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default ErrorLoad;\r\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport env from './env.json';\nimport { getData, selectStatus, selectError } from './store/getDataSlice';\n\nimport { GlobalStyle } from './components/Styled/GlobalStyle';\nimport Preloader from './components/Styled/Preloader';\nimport DeviceSelection from './components/DeviceSelection';\nimport DiagramField from './components/DiagramField';\nimport ErrorLoad from './components/Styled/ErrorLoad';\n\nfunction App() {\n  const dbUrl = env.backend.dbUrl;\n  // const dbUrl = `https://analytics.3divi.ru/api/v2/statistics/user/2088/devices/dates/ages/?key=d3aa35bde5ef46899b91aca9c66e174e&b=2020/03/08%2012:00:00&e=20\n  // 20/09/08%2012:00:00&tzo=0`;\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const status = useSelector(selectStatus);\n\n  useEffect(() => {\n    dispatch(getData(dbUrl));\n  }, [dispatch, dbUrl]);\n\n  return (\n    <>\n      <GlobalStyle />\n      {status === 'success' && (\n        <>\n          <DeviceSelection />\n          <DiagramField />\n        </>\n      )}\n      {status === 'loading' && <Preloader />}\n      {error && <ErrorLoad text={error} />}\n    </>\n  );\n}\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\nconst app = () => (\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\nrender(app(), document.getElementById('root'));\n"],"sourceRoot":""}